{"ast":null,"code":"import _regeneratorRuntime from\"/home/snuc/dev/presentable-projects/dayfeed/app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/snuc/dev/presentable-projects/dayfeed/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/snuc/dev/presentable-projects/dayfeed/app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from'react';import getNewsService from'../../../api/news';import DisconnectedNewsFeed from'../../../components/organisms/news-feed/NewsFeed';import{useFeedState}from'../../../state/feedContext';import Select from'react-select';var NewsFeed=function NewsFeed(){var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),articles=_React$useState2[0],setArticles=_React$useState2[1];var _React$useState3=React.useState(undefined),_React$useState4=_slicedToArray(_React$useState3,2),error=_React$useState4[0],setError=_React$useState4[1];var _useFeedState=useFeedState(),feeds=_useFeedState.feeds;var _React$useState5=React.useState(0),_React$useState6=_slicedToArray(_React$useState5,2),selectedFeed=_React$useState6[0],setSelected=_React$useState6[1];React.useEffect(function(){function fetchFeed(){return _fetchFeed.apply(this,arguments);}function _fetchFeed(){_fetchFeed=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var newsSerivce,feed,query;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:newsSerivce=getNewsService();feed=feeds[selectedFeed];if(feed){_context.next=4;break;}return _context.abrupt(\"return\");case 4:query={requiredKeywords:feed.includedKeywords,optionalKeywords:feed.optionalKeywords,excludedKeywords:feed.excludedKeywords,category:feed.topic?feed.topic:undefined,language:feed.language?feed.language:undefined,country:feed.country?feed.country:undefined,sources:feed.sources.map(function(s){return s.id;})};newsSerivce.searchTopHeadlines(query,30,1).then(function(res){return setArticles(res.articles.map(function(a){var _a$source,_a$source2;console.log(a.urlToImage);return{title:a.title?a.title:'Failed to load title',id:a.url?a.url:'',description:a.description?a.description:'No description provided.',imageUrl:a.urlToImage&&a.urlToImage!=='null'?a.urlToImage:'https://k12cit.com/assets/images/missing.png',articleUrl:a.url?a.url:'',sourceName:((_a$source=a.source)===null||_a$source===void 0?void 0:_a$source.name)?(_a$source2=a.source)===null||_a$source2===void 0?void 0:_a$source2.name:'Unknown source'};}));}).catch(function(error){console.log(error);setError('Failed to fetch feed.');});case 6:case\"end\":return _context.stop();}}},_callee);}));return _fetchFeed.apply(this,arguments);}fetchFeed();},[selectedFeed,feeds]);if(error){return/*#__PURE__*/React.createElement(React.Fragment,null,error);}return/*#__PURE__*/React.createElement(React.Fragment,null,feeds.length!==0&&/*#__PURE__*/React.createElement(Select,{value:{label:feeds[selectedFeed].name,value:selectedFeed},options:feeds.map(function(f,i){return{label:f.name,value:i};}),onChange:function onChange(s){return setSelected(s.value);}}),/*#__PURE__*/React.createElement(DisconnectedNewsFeed,{articles:articles}));};export default NewsFeed;","map":{"version":3,"sources":["/home/snuc/dev/presentable-projects/dayfeed/app/src/connector/organisms/news-feed/NewsFeed.tsx"],"names":["React","getNewsService","DisconnectedNewsFeed","useFeedState","Select","NewsFeed","useState","articles","setArticles","undefined","error","setError","feeds","selectedFeed","setSelected","useEffect","fetchFeed","newsSerivce","feed","query","requiredKeywords","includedKeywords","optionalKeywords","excludedKeywords","category","topic","language","country","sources","map","s","id","searchTopHeadlines","then","res","a","console","log","urlToImage","title","url","description","imageUrl","articleUrl","sourceName","source","name","catch","length","label","value","f","i"],"mappings":"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","sourcesContent":["import React from 'react';\nimport getNewsService from '../../../api/news';\nimport { Category, Language, HeadlineQuery, HeadlineCountry } from '../../../lib/api/types';\nimport { NewsArticle } from '../../../lib/client/types';\nimport DisconnectedNewsFeed from '../../../components/organisms/news-feed/NewsFeed';\nimport { useFeedState } from '../../../state/feedContext';\nimport Select from 'react-select';\n\n\nconst NewsFeed: React.FC = () => {\n    const [articles, setArticles] = React.useState<NewsArticle[]>([])\n    const [error, setError] = React.useState<string | undefined>(undefined);\n    const { feeds } = useFeedState();\n    const [selectedFeed, setSelected] = React.useState(0);\n\n    React.useEffect(() => {\n        async function fetchFeed() { \n            let newsSerivce = getNewsService();\n            let feed = feeds[selectedFeed];\n            if (!feed) return;\n\n            let query: HeadlineQuery = {\n                requiredKeywords: feed.includedKeywords,\n                optionalKeywords: feed.optionalKeywords,\n                excludedKeywords: feed.excludedKeywords,\n                category: feed.topic ? feed.topic as Category : undefined,\n                language: feed.language ? feed.language as Language : undefined,\n                country: feed.country ? feed.country as HeadlineCountry : undefined,\n                sources: feed.sources.map(s => s.id)\n            }\n            newsSerivce.searchTopHeadlines(query, 30, 1)\n            .then(res => setArticles(\n                res.articles.map(a => {\n                    console.log(a.urlToImage)\n                    return {\n                        title: a.title ? a.title : 'Failed to load title',\n                        id: a.url ? a.url : '',\n                        description: a.description ? a.description : 'No description provided.',\n                        imageUrl: a.urlToImage && a.urlToImage !== 'null' ? a.urlToImage : 'https://k12cit.com/assets/images/missing.png',\n                        articleUrl: a.url ? a.url : '',\n                        sourceName: a.source?.name ? a.source?.name : 'Unknown source'\n                    }\n                })\n            )).catch(error => {console.log(error); setError('Failed to fetch feed.')})\n        }\n\n        fetchFeed()\n    }, [selectedFeed, feeds])\n\n    if (error) {\n        return (\n            <>\n                {error}\n            </>\n        )\n    }\n\n    return (\n        <>\n            {\n                feeds.length !== 0 && \n                <Select value={{label: feeds[selectedFeed].name, value: selectedFeed}}\n                        options={feeds.map((f, i) => {return {label: f.name, value: i}})}\n                        onChange={(s) => setSelected((s as {label: string, value: number}).value)}\n                />\n            }\n            <DisconnectedNewsFeed articles={articles}/>\n        </>\n    )\n}\n\nexport default NewsFeed;"]},"metadata":{},"sourceType":"module"}